# Source: cost-analyzer/templates/cost-analyzer-deployment-template.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubecost-cost-analyzer
  labels:
    app.kubernetes.io/name: cost-analyzer
    helm.sh/chart: cost-analyzer-1.66.0
    app.kubernetes.io/instance: kubecost
    app.kubernetes.io/managed-by: Helm
    app: cost-analyzer
    gitops.jenkins-x.io/pipeline: 'namespaces'
  namespace: kubecost
  annotations:
    wave.pusher.com/update-on-config-change: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cost-analyzer
      app.kubernetes.io/instance: kubecost
      app: cost-analyzer
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cost-analyzer
        app.kubernetes.io/instance: kubecost
        app: cost-analyzer
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      restartPolicy: Always
      serviceAccountName: kubecost-cost-analyzer
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: default.conf
        - name: persistent-configs
          persistentVolumeClaim:
            claimName: kubecost-cost-analyzer
      initContainers:
        - name: config-perms-fix
          image: busybox
          resources: {}
          command: ["/bin/chmod", "-R", "777", "/var/configs"]
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          securityContext:
            runAsUser: 0
      containers:
        - image: gcr.io/kubecost1/cost-model:prod-1.66.0
          name: cost-model
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 200m
              memory: 55Mi
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 200
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: prometheus-server-endpoint
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyDXQPG_MHUEy9neR7stolq6l0ujXmjJlvk" # The GCP Pricing API requires a key.
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/configs/key.json
            - name: CONFIG_PATH
              value: /var/configs/
            - name: CLUSTER_PROFILE
              value: production
            - name: REMOTE_WRITE_PASSWORD
              value: admin
            - name: GOGC
              value: "60"
            - name: LOG_COLLECTION_ENABLED
              value: "true"
            - name: PRODUCT_ANALYTICS_ENABLED
              value: "true"
            - name: ERROR_REPORTING_ENABLED
              value: "true"
            - name: VALUES_REPORTING_ENABLED
              value: "true"
            - name: SENTRY_DSN
              value: "https://71964476292e4087af8d5072afe43abd@o394722.ingest.sentry.io/5245431"
            - name: CACHE_WARMING_ENABLED
              value: "true"
            - name: SAVINGS_CACHE_WARMING_ENABLED
              value: "true"
            - name: USE_ETL_CACHE
              value: "true"
            - name: ETL_ENABLED
              value: "true"
            - name: PV_ENABLED
              value: "true"
            - name: MAX_QUERY_CONCURRENCY
              value: "5"
            - name: UTC_OFFSET
              value: "+00:00"
            - name: CLUSTER_ID
              value: cluster-one
            - name: SQL_ADDRESS
              value: pgprometheus
            - name: RELEASE_NAME
              value: kubecost
            - name: KUBECOST_NAMESPACE
              value: kubecost
            - name: KUBECOST_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: kubecost-token
        - image: gcr.io/kubecost1/frontend:prod-1.66.0
          env:
            - name: GET_HOSTS_FROM
              value: dns
          name: cost-analyzer-frontend
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/
          resources:
            requests:
              cpu: 10m
              memory: 55Mi
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 200
        - image: gcr.io/kubecost1/server:prod-1.66.0
          resources:
            requests:
              cpu: 100m
              memory: 55Mi
          name: cost-analyzer-server
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 200
          volumeMounts:
            - name: persistent-configs
              mountPath: /var/configs
          env:
            - name: PROMETHEUS_SERVER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: prometheus-server-endpoint
            - name: HELM_VALUES
              value: 
            - name: KUBECOST_NAMESPACE
              value: kubecost
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/configs/key.json
            - name: KUBECOST_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: kubecost-cost-analyzer
                  key: kubecost-token
